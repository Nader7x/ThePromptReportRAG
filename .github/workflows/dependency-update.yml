name: 🔄 Update Dependencies

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: "0 9 * * 1"
  workflow_dispatch:
    inputs:
      update_type:
        description: "Type of update"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

env:
  PYTHON_VERSION: "3.11"

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    name: 📦 Update Dependencies

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CR_PAT }}
          fetch-depth: 0

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      - name: 📦 Install tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-tools pur

      - name: 🔄 Update requirements
        run: |
          echo "🔄 Updating dependency files..."

          # Update requirements.txt
          if [ -f "requirements.txt" ]; then
            echo "📦 Updating requirements.txt"
            pur -r requirements.txt --force
          fi

          # Update optional requirements
          if [ -f "requirements-optional.txt" ]; then
            echo "📦 Updating requirements-optional.txt"
            pur -r requirements-optional.txt --force
          fi

          # Update dev requirements
          if [ -f "requirements-dev.txt" ]; then
            echo "📦 Updating requirements-dev.txt"
            pur -r requirements-dev.txt --force
          fi

          # Show what changed
          echo "📋 Changes made:"
          git diff --name-only || echo "No changes detected"

      - name: 🧪 Test updated dependencies
        run: |
          echo "🧪 Testing updated dependencies..."

          # Install updated dependencies
          pip install -r requirements.txt

          # Install dev dependencies if available
          if [ -f "requirements-dev.txt" ]; then
            pip install -r requirements-dev.txt
          fi

          # Test core imports
          python -c "
          import sys
          import traceback

          test_modules = [
              'google.generativeai',
              'streamlit', 
              'fastapi',
              'numpy',
              'pandas',
              'requests',
              'faiss',
              'sentence_transformers'
          ]

          failed_imports = []

          for module in test_modules:
              try:
                  __import__(module)
                  print(f'✅ {module}')
              except ImportError as e:
                  print(f'❌ {module}: {e}')
                  failed_imports.append(module)
              except Exception as e:
                  print(f'⚠️ {module}: {e}')

          if failed_imports:
              print(f'❌ Failed to import: {failed_imports}')
              sys.exit(1)
          else:
              print('✅ All core dependencies imported successfully')
          "

          # Test basic app syntax
          echo "🔍 Testing app syntax..."
          python -m py_compile streamlit_app.py
          echo "✅ streamlit_app.py syntax check passed"

      - name: 📝 Create pull request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.CR_PAT }}
          commit-message: "📦 Update dependencies (${{ github.event.inputs.update_type || 'scheduled' }})"
          title: "📦 Dependency Updates (${{ github.event.inputs.update_type || 'scheduled' }})"
          body: |
            🤖 **Automated Dependency Update**

            This PR updates the project dependencies to their latest versions.

            ### Changes
            - ⬆️ Updated `requirements.txt`
            - ⬆️ Updated `requirements-optional.txt` (if exists)
            - ⬆️ Updated `requirements-dev.txt` (if exists)

            ### Update Type
            **Type:** ${{ github.event.inputs.update_type || 'Scheduled weekly update' }}

            ### Testing Status
            - ✅ Basic import tests passed
            - ✅ App syntax validation passed
            - ⚠️ Please review changes and run full test suite

            ### Review Checklist
            - [ ] Review dependency changes for breaking changes
            - [ ] Test the Streamlit app locally
            - [ ] Verify API functionality
            - [ ] Check for any new security vulnerabilities
            - [ ] Ensure compatibility with current Python version (${{ env.PYTHON_VERSION }})

            ### Notes
            - All core dependencies were successfully imported
            - No syntax errors detected in main application files
            - Consider testing on the deployed Streamlit app before merging

            ---
            *This PR was created automatically by GitHub Actions*

            **Triggered by:** ${{ github.event_name }}
            **Actor:** ${{ github.actor }}
            **Workflow:** ${{ github.workflow }}
          branch: dependency-updates
          delete-branch: true
          draft: false

      - name: 🏷️ Add labels to PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:dependency-updates`,
              state: 'open'
            });

            if (prs.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prs[0].number,
                labels: ['dependencies', 'automated', 'maintenance']
              });
            }
